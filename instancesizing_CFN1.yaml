AWSTemplateFormatVersion: 2010-09-09
Description: CloudFormation template for creating an ec2 instance
Parameters:
  VPC:
    Description: vpc
    Type: 'List<AWS::EC2::VPC::Id>'
  KeyName:
    Description: Key Pair name
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: DMAF key
  InstanceType:
    Description: The instance type for the EC2 instance.
    Type: String
    Default: m4.large
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m4.large
      - m5a.large
      - m5d.large
  Name:
    Description: The name of the Linux EC2 instance to run workload collection
    Type: String
    Default: WL
  Subnet:
    Description: Enter your private subnet id
    Type: String
  SecurityGroups:
    Description: Choose the security group
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
  LinuxAMIidName    :
    Description: Enter the Linux AMI id as instructed in the documentation
    Type: String
  S3Bucketname :
    Description: Enter the name of your own S3 bucket to be created to store workload information
    Type: String
  GitHuburl :
    Description: Enter the GitHub URL of file instancesizingtools.zip
    Type: String

Resources:
  myLinuxEC2Instance:
    Type: 'AWS::EC2::Instance'
    Version: 2009-05-15
    Properties:
      ImageId: !Ref LinuxAMIidName
      SecurityGroupIds: !Ref SecurityGroups
      KeyName: !Ref KeyName
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref RootInstanceProfile
      SubnetId: !Ref Subnet
      Tags:
        -
         Key: "Name"
         Value: !Ref Name
        -
         Key: "Env"
         Value: "Test"
      UserData:
        'Fn::Base64': !Sub
          |
          #!/bin/bash -xe

          curl -o /etc/yum.repos.d/public-yum-ol7.repo https://yum.oracle.com/public-yum-ol7.repo && \
               yum-config-manager --enable ol7_oracle_instantclient && \
               yum -y install --nogpgcheck oracle-instantclient18.3-basic oracle-instantclient18.3-devel oracle-instantclient18.3-sqlplus && \
               rm -rf /var/cache/yum && \
               echo /usr/lib/oracle/18.3/client64/lib > /etc/ld.so.conf.d/oracle-instantclient18.3.conf && \
               ldconfig

          python -m pip install cx_Oracle --upgrade
          
          mkdir -p /usr/lib/oracle/18.3/client64/network/admin
          cat << EOF | tee /usr/lib/oracle/18.3/client64/network/admin/tnsnames.ora
          ORCL =
            (DESCRIPTION =
              (ADDRESS = (PROTOCOL = TCP)(HOST = test.divvpwin9xgv.us-east-1.rds.amazonaws.com)(PORT = 1521))
              (CONNECT_DATA =
                (SERVER = DEDICATED)
                (SERVICE_NAME = ORCL)
              )
            )
          EOF

          chown -R ec2-user:ec2-user /usr/lib/oracle/18.3/client64
          

          cat << EOF | tee /home/ec2-user/.bash_profile
          ORACLE_HOME=/usr/lib/oracle/18.3/client64
          PATH=/usr/lib/oracle/18.3/client64/bin:$PATH
          TNS_ADMIN=/usr/lib/oracle/18.3/client64/network/admin
          LD_LIBRARY_PATH=/usr/lib/oracle/18.3/client64/lib
          export ORACLE_HOME
          export LD_LIBRARY_PATH
          export PATH
          export TNS_ADMIN
          EOF

          sudo -u ec2-user -- bash -c 'cd /home/ec2-user; curl -OL ${GitHuburl}; unzip instancesizingtools.zip'
    
      

  InstancesizingS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3Bucketname


  MyRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  RolePolicies:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: s3instancesizing
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:*'
            Resource:
              - !Sub 'arn:aws:s3:::${S3Bucketname}'
              - !Sub 'arn:aws:s3:::${S3Bucketname}/*'
      Roles:
        - !Ref MyRole
  RootInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref MyRole
